from core.db.db import DB, DBHelper, BASE
from models.base_methods import DB_METHODS

db = DBHelper()


class ExampleTable(DB, BASE, DB_METHODS):
    __tablename__ = 'OrderItem'
    __table_args__ = {'schema': 'public'}

    OrderItemId = db.column(column='int', primary_key=True)
    OrderId = db.column(column='int')
    FinProviderId = db.column(column='int')
    ServiceProvider = db.column(column='int')
    OperationType = db.column(column='int')
    Status = db.column(column='int')
    ErrorCode = db.column(column='int')
    ReservNumber = db.column(column='varchar')
    Amount = db.column(column='numeric')
    ClientCharge = db.column(column='numeric')
    ClientProfit = db.column(column='numeric')
    ServiceClass = db.column(column='int')
    Created = db.column(column='timestamp')
    Confirmed = db.column(column='timestamp')
    ConfirmTill = db.column(column='timestamp')
    VoidTill = db.column(column='timestamp')
    Departure = db.column(column='timestamp')
    PrevItemId = db.column(column='int')
    MainItemId = db.column(column='int')
    AdditionalData = db.column(column='json')
    ServiceType = db.column(column='int')
    IsVisaRequired = db.column(column='bool')
    AreLatinCharsRequired = db.column(column='bool')
    FinProviderTransId = db.column(column='varchar')
    PaidBlankQuantity = db.column(column='int')
    FreeBlankQuantity = db.column(column='int')
    PaidUnitQuantity = db.column(column='int')
    StatusUpdated = db.column(column='timestamp')
    IsVisaEntered = db.column(column='bool')
    IsReturnPossible = db.column(column='bool')
    ServiceProviderReference = db.column(column='varchar')
    IsExchangePossible = db.column(column='bool')
    ProviderPaymentForm = db.column(column='int')
    CompareStatus = db.column(column='int')
    ConfirmedByProvider = db.column(column='timestamp')
    IsExternallyLoaded = db.column(column='bool')
    Vat = db.column(column='numeric')
    AgentReferenceId = db.column(column='varchar')
    PosId = db.column(column='int')
    IsCalcIgnored = db.column(column='bool')
    PayTill = db.column(column='timestamp')
    AgentPaymentId = db.column(column='varchar')
    PaymentKind = db.column(column='int')
    ProviderOrderItemId = db.column(column='int')
    ProviderOrderId = db.column(column='int')
    AmountInCurrency = db.column(column='numeric')
    Currency = db.column(column='int')
    BuybackDate = db.column(column='date')
    PaymentMethod = db.column(column='int')
    OperationReason = db.column(column='int')
    BonusAmount = db.column(column='numeric')
    DepartureMsk = db.column(column='timestamp')
    EmployeeShiftId = db.column(column='int')
    PartnerRailwayTerminalId = db.column(column='int')

    def __init__(self, session, data=None):
        if data is None:
            data = {}
        super().__init__(session)
        self.OrderItemId = data.get('OrderItemId', '')
        self.OrderId = data.get('OrderId', '')
        self.FinProviderId = data.get('FinProviderId', '')
        self.ServiceProvider = data.get('ServiceProvider', '')
        self.OperationType = data.get('OperationType', '')
        self.Status = data.get('Status', '')
        self.ErrorCode = data.get('ErrorCode', '')
        self.ReservNumber = data.get('ReservNumber', '')
        self.Amount = data.get('Amount', '')
        self.ClientCharge = data.get('ClientCharge', '')
        self.ClientProfit = data.get('ClientProfit', '')
        self.ServiceClass = data.get('ServiceClass', '')
        self.Created = data.get('ServiceClass', '')
        self.Confirmed = data.get('ServiceClass', '')
        self.ConfirmTill = data.get('ConfirmTill', '')
        self.VoidTill = data.get('VoidTill', '')
        self.Departure = data.get('Departure', '')
        self.PrevItemId = data.get('PrevItemId', '')
        self.MainItemId = data.get('MainItemId', '')
        self.AdditionalData = data.get('AdditionalData', '')
        self.ServiceType = data.get('ServiceType', '')
        self.IsVisaRequired = data.get('IsVisaRequired', '')
        self.AreLatinCharsRequired = data.get('AreLatinCharsRequired', '')
        self.FinProviderTransId = data.get('FinProviderTransId', '')
        self.PaidBlankQuantity = data.get('PaidBlankQuantity', '')
        self.FreeBlankQuantity = data.get('FreeBlankQuantity', '')
        self.PaidUnitQuantity = data.get('PaidUnitQuantity', '')
        self.StatusUpdated = data.get('StatusUpdated', '')
        self.IsVisaEntered = data.get('IsVisaEntered', '')
        self.IsReturnPossible = data.get('IsReturnPossible', '')
        self.ServiceProviderReference = data.get('ServiceProviderReference', '')
        self.IsExchangePossible = data.get('IsExchangePossible', '')
        self.ProviderPaymentForm = data.get('ProviderPaymentForm', '')
        self.CompareStatus = data.get('CompareStatus', '')
        self.ConfirmedByProvider = data.get('ConfirmedByProvider', '')
        self.IsExternallyLoaded = data.get('IsExternallyLoaded', '')
        self.Vat = data.get('Vat', '')
        self.AgentReferenceId = data.get('AgentReferenceId', '')
        self.PosId = data.get('PosId', '')
        self.IsCalcIgnored = data.get('IsCalcIgnored', '')
        self.PayTill = data.get('PayTill', '')
        self.AgentPaymentId = data.get('AgentPaymentId', '')
        self.PaymentKind = data.get('PaymentKind', '')
        self.ProviderOrderItemId = data.get('ProviderOrderItemId', '')
        self.ProviderOrderId = data.get('ProviderOrderId', '')
        self.AmountInCurrency = data.get('AmountInCurrency', '')
        self.Currency = data.get('Currency', '')
        self.BuybackDate = data.get('BuybackDate', '')
        self.PaymentMethod = data.get('PaymentMethod', '')
        self.OperationReason = data.get('OperationReason', '')
        self.BonusAmount = data.get('BonusAmount', '')
        self.DepartureMsk = data.get('DepartureMsk', '')
        self.EmployeeShiftId = data.get('EmployeeShiftId', '')
        self.PartnerRailwayTerminalId = data.get('PartnerRailwayTerminalId', '')

        DB_METHODS.__init__(self, db=self, table_name=ExampleTable)
